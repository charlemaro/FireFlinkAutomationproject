<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Entered Campaign creation field]]>
    </line>
    <line>
      <![CDATA[Entered Campaign name]]>
    </line>
    <line>
      <![CDATA[Entered Target size]]>
    </line>
    <line>
      <![CDATA[Clicked Create Capaign button]]>
    </line>
  </reporter-output>
  <suite started-at="2025-08-22T15:23:12 IST" name="Suite" finished-at="2025-08-22T15:23:48 IST" duration-ms="35938">
    <groups>
      <group name="SmokeTesting">
        <method signature="CreateCampaignTest.tc_001_createCampaignTest()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" name="tc_001_createCampaignTest" class="praciceTestNg.CreateCampaignTest"/>
      </group> <!-- SmokeTesting -->
      <group name="sample">
        <method signature="CreateLeadPageTest.tc_002_creatLeadTest()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" name="tc_002_creatLeadTest" class="praciceTestNg.CreateLeadPageTest"/>
      </group> <!-- sample -->
    </groups>
    <test started-at="2025-08-22T15:23:12 IST" name="Test1" finished-at="2025-08-22T15:23:42 IST" duration-ms="29267">
      <class name="praciceTestNg.CreateCampaignTest">
        <test-method is-config="true" signature="bcConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:13 IST" name="bcConfig" finished-at="2025-08-22T15:23:18 IST" duration-ms="5099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bcConfig -->
        <test-method is-config="true" signature="bmConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:18 IST" name="bmConfig" finished-at="2025-08-22T15:23:19 IST" duration-ms="962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmConfig -->
        <test-method signature="sample()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:19 IST" name="sample" finished-at="2025-08-22T15:23:19 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample -->
        <test-method is-config="true" signature="amConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:20 IST" name="amConfig" finished-at="2025-08-22T15:23:27 IST" duration-ms="7339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amConfig -->
        <test-method is-config="true" signature="bmConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:27 IST" name="bmConfig" finished-at="2025-08-22T15:23:28 IST" duration-ms="1002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmConfig -->
        <test-method signature="tc_001_createCampaignTest()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:28 IST" name="tc_001_createCampaignTest" finished-at="2025-08-22T15:23:31 IST" duration-ms="3400" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Campaign creation field]]>
            </line>
            <line>
              <![CDATA[Entered Campaign name]]>
            </line>
            <line>
              <![CDATA[Entered Target size]]>
            </line>
            <line>
              <![CDATA[Clicked Create Capaign button]]>
            </line>
          </reporter-output>
        </test-method> <!-- tc_001_createCampaignTest -->
        <test-method is-config="true" signature="amConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:32 IST" name="amConfig" finished-at="2025-08-22T15:23:41 IST" duration-ms="9599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amConfig -->
        <test-method is-config="true" signature="acConfig()[pri:0, instance:praciceTestNg.CreateCampaignTest@279fedbd]" started-at="2025-08-22T15:23:41 IST" name="acConfig" finished-at="2025-08-22T15:23:42 IST" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acConfig -->
      </class> <!-- praciceTestNg.CreateCampaignTest -->
    </test> <!-- Test1 -->
    <test started-at="2025-08-22T15:23:12 IST" name="Test2" finished-at="2025-08-22T15:23:48 IST" duration-ms="35938">
      <class name="praciceTestNg.CreateLeadPageTest">
        <test-method is-config="true" signature="bsConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:12 IST" name="bsConfig" finished-at="2025-08-22T15:23:12 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bsConfig -->
        <test-method is-config="true" signature="bcConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:12 IST" name="bcConfig" finished-at="2025-08-22T15:23:18 IST" duration-ms="5453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bcConfig -->
        <test-method is-config="true" signature="bmConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:18 IST" name="bmConfig" finished-at="2025-08-22T15:23:19 IST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmConfig -->
        <test-method signature="sample()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:19 IST" name="sample" finished-at="2025-08-22T15:23:19 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sample -->
        <test-method is-config="true" signature="amConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:19 IST" name="amConfig" finished-at="2025-08-22T15:23:27 IST" duration-ms="7553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amConfig -->
        <test-method is-config="true" signature="bmConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:27 IST" name="bmConfig" finished-at="2025-08-22T15:23:27 IST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmConfig -->
        <test-method signature="tc_002_creatLeadTest()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:27 IST" name="tc_002_creatLeadTest" finished-at="2025-08-22T15:23:34 IST" duration-ms="6347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc_002_creatLeadTest -->
        <test-method is-config="true" signature="amConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:34 IST" name="amConfig" finished-at="2025-08-22T15:23:48 IST" duration-ms="14496" status="FAIL">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.8'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [d5b5a0fa7cc21635d66a21b18e50a4ea, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 139.0.3405.102, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62523}, msedge: {msedgedriverVersion: 138.0.3351.109 (3e2a22a9de0..., userDataDir: C:\Users\User\AppData\Local...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62523/devtoo..., se:cdpVersion: 139.0.3405.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d5b5a0fa7cc21635d66a21b18e50a4ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.8'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [d5b5a0fa7cc21635d66a21b18e50a4ea, findElement [using, value]]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 139.0.3405.102, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62523}, msedge: {msedgedriverVersion: 138.0.3351.109 (3e2a22a9de0..., userDataDir: C:\Users\User\AppData\Local...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62523/devtoo..., se:cdpVersion: 139.0.3405.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d5b5a0fa7cc21635d66a21b18e50a4ea
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:571)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at ObjectRepository.DashBoardPage.logout(DashBoardPage.java:165)
at utility.BaseClass.amConfig(BaseClass.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.UncheckedIOException: java.io.IOException: HTTP/1.1 header parser received no bytes
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:500)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.lambda$executeAsync$2(JdkHttpClient.java:387)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
... 4 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.HttpClientImpl.send(HttpClientImpl.java:970)
at java.net.http/jdk.internal.net.http.HttpClientFacade.send(HttpClientFacade.java:133)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:459)
... 8 more
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes
at java.net.http/jdk.internal.net.http.common.Utils.wrapWithExtraDetail(Utils.java:412)
at java.net.http/jdk.internal.net.http.Http1Response$HeadersReader.onReadError(Http1Response.java:590)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.checkForErrors(Http1AsyncReceiver.java:302)
at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.flush(Http1AsyncReceiver.java:268)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask.run(SequentialScheduler.java:182)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask.run(SequentialScheduler.java:149)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:207)
... 3 more
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
at java.net.http/jdk.internal.net.http.SocketTube.readAvailable(SocketTube.java:1178)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.read(SocketTube.java:841)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowTask.run(SocketTube.java:181)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:207)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:280)
at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:233)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable(SocketTube.java:782)
at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent.signalEvent(SocketTube.java:965)
at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowEvent.handle(SocketTube.java:253)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.handleEvent(HttpClientImpl.java:1477)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.lambda$run$3(HttpClientImpl.java:1422)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.run(HttpClientImpl.java:1422)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amConfig -->
        <test-method is-config="true" signature="acConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:48 IST" name="acConfig" finished-at="2025-08-22T15:23:48 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acConfig -->
        <test-method is-config="true" signature="asConfig()[pri:0, instance:praciceTestNg.CreateLeadPageTest@68e5eea7]" started-at="2025-08-22T15:23:48 IST" name="asConfig" finished-at="2025-08-22T15:23:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- asConfig -->
      </class> <!-- praciceTestNg.CreateLeadPageTest -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
